#!/usr/bin/env bash
# BACO/Pantheon CLI - Claude Integration Wrapper
# This script wraps Claude CLI to provide the gods command interface

# Check if claude is available
if ! command -v claude &> /dev/null; then
    echo "‚ö° BACO/Pantheon - VS Code Integration ‚ö°"
    echo ""
    echo "Claude CLI is not installed. Here are your options:"
    echo ""
    echo "1. Use VS Code Extension (Recommended):"
    echo "   - Click the Claude icon in the sidebar"
    echo "   - Sign in with your Claude account"
    echo "   - Use /gods commands in the Claude chat panel"
    echo ""
    echo "2. Try to install Claude CLI:"
    echo "   - Run: npm install -g @anthropic-ai/claude-code"
    echo "   - Or: npm install -g claude-cli"
    echo ""
    echo "3. Authenticate if CLI exists but not working:"
    echo "   - Run: claude-auth-docker.sh"
    echo ""
    echo "Note: The VS Code extension is the most reliable option in 2025."
    exit 1
fi

# Check if command is provided
if [ $# -eq 0 ]; then
    echo "Welcome to BACO/Pantheon! üöÄ"
    echo ""
    echo "Available commands:"
    echo "  init      - Initialize a new project"
    echo "  plan      - Create a development plan"
    echo "  execute   - Execute the plan"
    echo "  help      - Show this help message"
    echo ""
    echo "Example: gods init"
    exit 0
fi

# Get the command
COMMAND=$1
shift  # Remove the command from arguments

# Handle commands
case "$COMMAND" in
    init)
        echo "üöÄ Summoning the Pantheon..."
        claude chat "/gods init $*"
        ;;
    plan)
        echo "üìã Consulting the Oracle..."
        claude chat "/gods plan $*"
        ;;
    execute)
        echo "‚ö° Manifesting your vision..."
        claude chat "/gods execute $*"
        ;;
    validate)
        echo "üîç Validating sacred scrolls..."
        claude chat "/gods validate $*"
        ;;
    help|--help|-h)
        echo "BACO/Pantheon - Where Gods Build Software"
        echo ""
        echo "Usage: gods <command> [options]"
        echo ""
        echo "Commands:"
        echo "  init      - Initialize a new project with interactive setup"
        echo "  plan      - Create a development plan for your project"
        echo "  execute   - Execute the development plan"
        echo "  validate  - Validate your pantheon.md file"
        echo "  help      - Show this help message"
        echo ""
        echo "Examples:"
        echo "  gods init"
        echo "  gods plan \"Build a REST API\""
        echo "  gods execute"
        echo ""
        echo "This command wraps Claude to provide the Pantheon experience."
        ;;
    *)
        echo "‚ùå Unknown command: $COMMAND"
        echo "Run 'gods help' for available commands"
        exit 1
        ;;
esac