# Generic Application Dockerfile
# Generated by BACO Docker Generator
# Customize this template for your specific application

# Choose appropriate base image
# For Node.js: FROM node:18-alpine
# For Python: FROM python:3.11-slim
# For Go: FROM golang:1.21-alpine AS builder
# For Java: FROM openjdk:17-slim
FROM ubuntu:22.04

# Install common dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create app user (security best practice)
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Set working directory
WORKDIR /app

# Copy application files
# Adjust based on your project structure
COPY --chown=appuser:appuser . .

# Install application dependencies
# Node.js example:
# COPY package*.json ./
# RUN npm ci --only=production

# Python example:
# COPY requirements.txt .
# RUN pip install --no-cache-dir -r requirements.txt

# Build application (if needed)
# RUN npm run build
# RUN go build -o app
# RUN mvn clean package

# Switch to non-root user
USER appuser

# Expose application port
# Common ports: 3000 (Node), 8000 (Python), 8080 (Java), 80 (Web)
EXPOSE 8080

# Health check (customize endpoint)
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Start application
# Node.js: CMD ["node", "server.js"]
# Python: CMD ["python", "app.py"]
# Go: CMD ["./app"]
# Java: CMD ["java", "-jar", "app.jar"]
CMD ["./start.sh"]