{
  "formats": {
    "validation_result": {
      "json": {
        "version": "1.0.0",
        "schema": {
          "validation_id": "string",
          "timestamp": "ISO-8601",
          "session_id": "string",
          "validator": {
            "name": "string",
            "model": "string",
            "version": "string"
          },
          "target": {
            "type": "file|module|architecture",
            "path": "string",
            "lines": "number[]"
          },
          "results": {
            "status": "pass|warning|fail",
            "score": "number",
            "confidence": "number",
            "issues": [
              {
                "id": "string",
                "severity": "critical|high|medium|low|info",
                "category": "security|quality|performance|compliance",
                "location": {
                  "file": "string",
                  "line": "number",
                  "column": "number"
                },
                "message": "string",
                "suggestion": "string",
                "references": ["string"]
              }
            ],
            "metrics": {
              "cyclomatic_complexity": "number",
              "test_coverage": "number",
              "documentation_coverage": "number",
              "performance_score": "number",
              "security_score": "number",
              "maintainability_index": "number"
            },
            "recommendations": [
              {
                "priority": "high|medium|low",
                "action": "string",
                "rationale": "string",
                "effort": "string",
                "impact": "string"
              }
            ]
          },
          "context": {
            "previous_validation": "string",
            "changes_since_last": "number",
            "related_validations": ["string"]
          }
        }
      },
      "yaml": {
        "template": "validation_result_yaml.template"
      },
      "markdown": {
        "template": "## Validation Report\n\n**ID**: {{validation_id}}\n**Status**: {{status}}\n**Score**: {{score}}/100\n\n### Issues Found\n{{#each issues}}\n- **{{severity}}**: {{message}} (Line {{location.line}})\n  - Suggestion: {{suggestion}}\n{{/each}}\n\n### Metrics\n- Complexity: {{metrics.cyclomatic_complexity}}\n- Coverage: {{metrics.test_coverage}}%\n- Security: {{metrics.security_score}}/100\n\n### Recommendations\n{{#each recommendations}}\n1. **{{priority}}**: {{action}}\n   - Rationale: {{rationale}}\n   - Effort: {{effort}}\n{{/each}}"
      },
      "csv": {
        "headers": ["validation_id", "timestamp", "file", "status", "score", "issues_count", "critical_count", "high_count", "medium_count", "low_count"],
        "delimiter": ","
      },
      "html": {
        "template": "validation_report.html",
        "styling": "bootstrap",
        "interactive": true
      }
    },
    "session_export": {
      "json": {
        "version": "1.0.0",
        "schema": {
          "session": {
            "id": "string",
            "created_at": "ISO-8601",
            "updated_at": "ISO-8601",
            "duration": "string",
            "status": "active|paused|completed|abandoned",
            "workflow_type": "string",
            "project": {
              "name": "string",
              "description": "string",
              "repository": "string"
            }
          },
          "phases": [
            {
              "name": "string",
              "start_time": "ISO-8601",
              "end_time": "ISO-8601",
              "duration": "string",
              "gods_involved": ["string"],
              "artifacts_created": ["string"],
              "validations_performed": "number",
              "cost": "number"
            }
          ],
          "validations": [
            {
              "$ref": "#/definitions/validation_result"
            }
          ],
          "artifacts": [
            {
              "id": "string",
              "type": "code|documentation|configuration|test",
              "path": "string",
              "created_at": "ISO-8601",
              "created_by": "string",
              "hash": "string",
              "size": "number"
            }
          ],
          "decisions": [
            {
              "id": "string",
              "timestamp": "ISO-8601",
              "made_by": "string",
              "decision": "string",
              "rationale": "string",
              "alternatives_considered": ["string"],
              "impact": "string"
            }
          ],
          "cost_tracking": {
            "total_cost": "number",
            "by_model": {
              "claude_sonnet": "number",
              "claude_haiku": "number",
              "gemini_pro": "number",
              "gemini_flash": "number"
            },
            "by_phase": {},
            "tokens": {
              "input": "number",
              "output": "number",
              "total": "number"
            }
          },
          "metrics": {
            "quality_score": "number",
            "efficiency_score": "number",
            "time_saved": "string",
            "automated_validations": "number",
            "manual_interventions": "number"
          }
        }
      },
      "markdown": {
        "template": "session_report.md"
      }
    },
    "workflow_export": {
      "json": {
        "version": "1.0.0",
        "schema": {
          "workflow": {
            "name": "string",
            "version": "string",
            "description": "string",
            "type": "feature|bug|review|research",
            "estimated_duration": "string",
            "estimated_cost": "number"
          },
          "steps": [
            {
              "id": "string",
              "name": "string",
              "description": "string",
              "god": "string",
              "model": "string",
              "tools": ["string"],
              "inputs": ["string"],
              "outputs": ["string"],
              "validation_required": "boolean",
              "parallel_capable": "boolean",
              "estimated_time": "string",
              "estimated_cost": "number"
            }
          ],
          "validations": [
            {
              "trigger": "string",
              "validator": "string",
              "type": "string",
              "required": "boolean"
            }
          ],
          "optimizations": {
            "batch_capable": "boolean",
            "parallel_paths": [["string"]],
            "cache_strategy": "string",
            "cost_optimizations": ["string"]
          }
        }
      },
      "github_action": {
        "template": "workflow.yml"
      },
      "gitlab_ci": {
        "template": ".gitlab-ci.yml"
      }
    },
    "metrics_export": {
      "prometheus": {
        "template": "# HELP {{metric_name}} {{metric_help}}\n# TYPE {{metric_name}} {{metric_type}}\n{{metric_name}}{{{labels}}} {{value}}"
      },
      "datadog": {
        "format": "statsd",
        "namespace": "pantheon"
      },
      "json": {
        "schema": {
          "timestamp": "ISO-8601",
          "metrics": [
            {
              "name": "string",
              "value": "number",
              "unit": "string",
              "tags": {}
            }
          ]
        }
      }
    },
    "pr_description": {
      "github": {
        "template": "## üèõÔ∏è Pantheon Validation Summary\n\n### Overview\n{{description}}\n\n### Changes\n{{#each files}}\n- `{{path}}`: {{description}}\n{{/each}}\n\n### Validation Results\n‚úÖ **Security**: {{security_status}} ({{security_score}}/100)\n‚úÖ **Quality**: {{quality_status}} ({{quality_score}}/100)\n‚úÖ **Performance**: {{performance_status}}\n‚úÖ **Tests**: {{test_coverage}}% coverage\n\n### Divine Council Review\n{{#each validations}}\n- **{{god}}**: {{summary}}\n{{/each}}\n\n### Metrics\n- **Total Cost**: ${{total_cost}} ({{cost_savings}}% saved via Gemini)\n- **Duration**: {{duration}}\n- **Lines Changed**: {{lines_changed}}\n\n### Next Steps\n{{#each next_steps}}\n- [ ] {{action}}\n{{/each}}"
      },
      "gitlab": {
        "template": "merge_request.md"
      }
    },
    "documentation": {
      "mdx": {
        "template": "---\ntitle: {{title}}\ncategory: {{category}}\nvalidated: {{validated}}\nlast_updated: {{timestamp}}\n---\n\n# {{title}}\n\n{{content}}\n\n## Validation History\n{{validation_summary}}\n\n## API Documentation\n{{api_docs}}\n\n## Examples\n{{examples}}"
      },
      "docusaurus": {
        "template": "docusaurus.mdx"
      }
    }
  },
  "transformations": {
    "remove_sensitive": {
      "patterns": [
        "api_key",
        "secret",
        "password",
        "token",
        "credential"
      ],
      "replacement": "[REDACTED]"
    },
    "compress": {
      "algorithm": "gzip",
      "level": 9
    },
    "minify": {
      "remove_whitespace": true,
      "remove_comments": true
    }
  },
  "validators": {
    "json_schema": {
      "strict": true,
      "additional_properties": false
    },
    "yaml": {
      "safe_load": true
    }
  }
}